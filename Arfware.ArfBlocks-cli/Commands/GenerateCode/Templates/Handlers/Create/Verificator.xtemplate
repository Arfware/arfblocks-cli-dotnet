namespace TodoApp.Application.RequestHandlers.{{PluralObjectName}}.{{PluralEndpointType}}.{{ActionName}};

public class Verificator : IRequestVerificator
{
    private readonly AuthorizationService _authorizationService;

    public Verificator(ArfBlocksDependencyProvider dependencyProvider)
    {
        _authorizationService = dependencyProvider.GetInstance<AuthorizationService>();
    }

    public async Task VerificateActor(IRequestModel payload, CancellationToken cancellationToken)
    {
        var requestPayload = (RequestModel)payload;

        await _authorizationService.CurrentUser()
                                        .HaveResourceAccess(typeof(Verificator).Namespace)
                                        .Check();
    }

    public async Task VerificateDomain(IRequestModel payload, CancellationToken cancellationToken)
    {
        var requestPayload = (RequestModel)payload;

        // NOP:
        await Task.CompletedTask;
    }
}